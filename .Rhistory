library(data.table)
library(igraph)
library(ggplot2)
data <- 'pu.csv' # Toki Pona
allsubstr <- # Returns a vector of all unique substrings of length n from x
function(x, n) substring(
text = x,
first = 1:(nchar(x) - n + 1),
last = n:nchar(x)
) %>%
unique()
phoneme_constituents <- # Returns all the "1grams," i.e. one-length kgrams
function(x) allsubstr(x = x, n = 1)[nchar(allsubstr(x,1)) == 1]
biphone_constituents <- # Returns all the "2grams," i.e. two-length kgrams
function(x) allsubstr(x = x, n = 2)[nchar(allsubstr(x,2)) == 2]
listchunk_constituents <- # Returns both biphones and phonemes
function(x) union(
phoneme_constituents(x),
biphone_constituents(x)
)
mark_nonlexical <- # Returns listchunk_constituents marked for nonlexicality
function(x) paste0('.',x)
marked_biphones <-
function(x) biphone_constituents(x) %>%
lapply(FUN = mark_nonlexical) %>%
unlist()
marked_phonemes <-
function(x) phoneme_constituents(x) %>%
lapply(FUN = mark_nonlexical) %>%
unlist()
marked_constituents <- # Returns both biphones and phonemes
function(x) union(
marked_phonemes(x),
marked_biphones(x)
)
word.list <- fread(file=data)$Klattese
word.list <- fread(file=data)$Klattese
setwd("~/GitHub/spreadr_activation_lab")
word.list <- fread(file=data)$Klattese
word.list <- fread(file=data)$Klattese
setwd("~/GitHub/spreadr_activation_lab")
word.list <- fread(file=data)$Klattese
setwd("C:\Users\Sasha NiehorsterCook\Documents\GitHub\spreadr_activation_lab")
setwd("Users\Sasha NiehorsterCook\Documents\GitHub\spreadr_activation_lab")
setwd("~C:\Users\Sasha NiehorsterCook\Documents\GitHub\spreadr_activation_lab")
setwd("~/GitHub/spreadr_activation_lab")
getwd()
word.list <- fread(file=data)$Klattese
library(data.table)
library(igraph)
library(ggplot2)
data <- 'pu.csv' # Toki Pona
allsubstr <- # Returns a vector of all unique substrings of length n from x
function(x, n) substring(
text = x,
first = 1:(nchar(x) - n + 1),
last = n:nchar(x)
) %>%
unique()
phoneme_constituents <- # Returns all the "1grams," i.e. one-length kgrams
function(x) allsubstr(x = x, n = 1)[nchar(allsubstr(x,1)) == 1]
biphone_constituents <- # Returns all the "2grams," i.e. two-length kgrams
function(x) allsubstr(x = x, n = 2)[nchar(allsubstr(x,2)) == 2]
listchunk_constituents <- # Returns both biphones and phonemes
function(x) union(
phoneme_constituents(x),
biphone_constituents(x)
)
mark_nonlexical <- # Returns listchunk_constituents marked for nonlexicality
function(x) paste0('.',x)
marked_biphones <-
function(x) biphone_constituents(x) %>%
lapply(FUN = mark_nonlexical) %>%
unlist()
marked_phonemes <-
function(x) phoneme_constituents(x) %>%
lapply(FUN = mark_nonlexical) %>%
unlist()
marked_constituents <- # Returns both biphones and phonemes
function(x) union(
marked_phonemes(x),
marked_biphones(x)
)
word.list <- fread(file=data)$Klattese
word.list <- word.list[1:20]
biphone.list <-
lapply(
X = word.list,
FUN = biphone_constituents
) %>%
unlist() %>%
unique() %>%
sort()
marked_biphone.list <-
lapply(biphone.list,mark_nonlexical) %>%
unlist()
phoneme.list <-
lapply(
X = biphone.list,
FUN = phoneme_constituents
) %>%
unlist() %>%
unlist() %>%
unique() %>%
sort()
marked_phoneme.list <-
lapply(phoneme.list,mark_nonlexical) %>%
unlist()
lexicon.dt <- data.table(word = word.list)
lexicon.dt[,phonemes:= lapply(X = word.list, FUN = marked_phonemes)]
lexicon.dt[,biphones:= lapply(X = word.list, FUN = marked_biphones)]
lexicon.dt[,constituents:= lapply(X = word.list, FUN = marked_constituents)]
sublexicon.dt <- data.table(biphone = biphone.list)
sublexicon.dt[,phonemes:= lapply(X=biphone.list,FUN=marked_phonemes)]
vset <- data.frame(
v = c(
word.list,
paste0('.',biphone.list),
paste0('.',phoneme.list)
),
type = c(
rep(TRUE,length(word.list)),
rep(FALSE,length(biphone.list)),
rep(FALSE,length(phoneme.list))
),
length = c(
nchar(word.list),
nchar(biphone.list),
nchar(phoneme.list)
)
)
eset1 <- lexicon.dt[,
list(
v1 = rep(word,lengths(constituents)),
v2 = unlist(constituents)
)
]
eset2 <- sublexicon.dt[,
list(
v1 = rep(mark_nonlexical(biphone),lengths(phonemes)),
v2 = unlist(phonemes)
)
]
eset <- rbind(eset1,eset2)
mfield.g <- graph_from_data_frame(d = eset, vertices = vset)
View(mfield.g)
View(mfield.g)
View(mfield.g)
View(mfield.g)
graph(mfield.g)
plot(mfiled.g)
plot(mfield.g)
