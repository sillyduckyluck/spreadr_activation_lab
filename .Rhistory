# Packages
library(data.table)
library(igraph)
library(ggplot2)
# Data - Pick your language
data <- 'low_prob_words.csv'
# data <- 'WordList.csv' # English
lexicon.dt <- fread(file=data)
allsubstr <- # Returns an array of all unique substrings of length n from x
function(x, n)
substring(
text = x,
first = 1:(nchar(x) - n + 1),
last = n:nchar(x)
) %>%
unique()
kgrams <- # Concatenates the substrings with a period to mark nonlexicality
function(x, n) '.' %>% paste0(allsubstr(x = x, n = n))
biphones <- # Returns all the "2grams," i.e. two-length kgrams
function(x) kgrams(x = x, n = 2)
lexicon.dt[,constituents:=Vectorize(biphones)(Klattese)]
# Now our wordlist is stored as a data table
# That column contains the constituent biphones of each word.
# Let's take a peek inside:
head(lexicon.dt)
biphoneset <-
lexicon.dt[,sort(unique(unlist(constituents)))]
head(biphoneset)
vset <- data.frame(
v = c(
lexicon.dt$Orthography,
biphoneset
),
type = c(
rep(TRUE,length(lexicon.dt$Orthography)),
rep(FALSE,length(biphoneset))
),
length = c(
lexicon.dt$Orthography %>% nchar(),
rep('N/A',length(biphoneset))
)
)
eset <- lexicon.dt[,
list(
Orthography = rep(Orthography,lengths(constituents)),
biphone = unlist(constituents)
)
]
parser.g <- graph_from_data_frame(d = eset, vertices = vset)
lexicon.g <- # The Lexicon
bipartite_projection(
graph = parser.g,
which="true"
)
sublexicon.g <- # The Sublexicon
bipartite_projection(
parser.g,
which="false"
)
plot.igraph(
x = lexicon.g,
layout = layout.fruchterman.reingold(
graph = lexicon.g,
niter=1000
)
)
write_graph(
graph = lexicon.g,
file = 'lexicon.gml',
format = 'gml'
)
write_graph(
graph = sublexicon.g,
file = 'parser.gml',
format = 'gml'
)
